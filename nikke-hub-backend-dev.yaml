server:
  port: ${BACKEND_SERVER_PORT}
  forward-headers-strategy: framework

spring:

  zipkin:
    baseUrl: ${SPRING_ZIPKIN_BASEURL:http://localhost:9411}
    sender:
      type: web

  hateoas:
    use-hal-as-default-json-media-type: false

  datasource:
    driverClassName: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

  jpa:
    generate-ddl: ${SPRING_JPA_GENERATE_DDL}
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    properties:
      hibernate:
        dialect: ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT}
        transaction:
          coordinator_class: jdbc
    sql:
      init:
        mode: never

  flyway:
    enabled: ${SPRING_FLYWAY_ENABLED}
    baseline-on-migrate: ${SPRING_FLYWAY_BASELINE_ON_MIGRATE}
    baseline-version: ${SPRING_FLYWAY_BASELINE_VERSION}
    user: ${SPRING_FLYWAY_USER}
    password: ${SPRING_FLYWAY_PASSWORD}

  cache:
    type: redis
  data:
    redis:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  health:
    show-details: always
    probes:
      enabled: true
  info:
    env:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
    export:
      zipkin:
        endpoint: ${MANAGEMENT_TRACING_EXPORT_ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}

logging:
  level:
    root: INFO
    io.micrometer.tracing: DEBUG
    org.springframework.web: DEBUG